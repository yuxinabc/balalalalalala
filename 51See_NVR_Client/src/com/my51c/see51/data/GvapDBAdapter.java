//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : See51
//  @ File Name : DBHelper.java
//  @ Date : 2012-5-30
//  @ Author : Eric Guo <gjl@my51c.com>
//
//



package com.my51c.see51.data;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteException;
import android.database.sqlite.SQLiteOpenHelper;

import java.util.ArrayList;
import java.util.List;

/**
 * see51ƽ̨��Ϣ���ݿ⸨����
 * @author guo
 *
 */
public class GvapDBAdapter {

	private final static String DATABASE_NAME = "see51.db";
	private final static int DATABASE_VERSION = 1;
	
	private final static String Account_tbl = "account";
	private final static String Public_tbl = "public";
	private final static String Device_tbl = "device";
	private final static String Global_tbl = "global";
	
	private final static String CREATE_ACCOUNT_TBL = "create table "  + Account_tbl + 
					 "(username text primary key ," +
					 "password text default(''), nickname text default('')," +
					 "email text default('')," +
					 "devlist_version integer default(0));";
	private final static String CREATE_GLOBAL_TBL = "create table "  + Global_tbl +
					 "(name text primary key, " +
					 "intValue integer default(0)," +
					 "strValue text default(''), " +
					 "floatValue float defalut(0.0));";
	private final static String CREATE_DEVICE_TBL = "create table "  + Device_tbl + 
					"(devid text primary key, " +
			 		"name text default(''), " +
			 		"hwversion text default(''), " + 
			 		"swversion text default('')," +
			 		"username text not null, " +
			 		"screenshot blob);";
	private final static String CREATE_PUBLIC_TBL = "create table "  + Public_tbl + 
					"(devid text primary key," +
					"name text default('')," +
					"hwversion text default('')," +
					"swversion text default('')," +
					"screenshot blob);";
	
	private SQLiteDatabase db;
	private See51DBHelper  dbHelper;
	private final Context context;
	private boolean opend;
	
	public GvapDBAdapter(Context _context) {
		context = _context;
		dbHelper = new See51DBHelper(context, DATABASE_NAME, null, DATABASE_VERSION);
		}
	/**
	 * �����ݿ�
	 * @return true���򿪳ɹ� false����ʧ��
	 */
	public boolean open(){
			try
			{
				db = dbHelper.getWritableDatabase();
			}
			catch(SQLiteException e)
			{
				e.printStackTrace();
				return false;
			}
			this.opend = true;
			return true;
		}
	/**
	 * �ر����ݿ�
	 */
	public void close() {
		db.close();
	}
	

	private void updateAccoutInfo(AccountInfo account, boolean savePassword)
	{
		if(db != null)
		{		
			String password = savePassword ? account.getPassword() : "";
			String nickname = (account.getNickname()!=null) ? account.getNickname() : "";
			String email = (account.getEmail()!=null) ? account.getEmail() : "";
			int version = (account.getDevList() != null) ? account.getDevList().getVersion() : 0;
	 		
			String strSql =  String.format("update " + Account_tbl +
											" set username='%s', password='%s', nickname='%s', email='%s', devlist_version='%d'" +
											" where username='%s';",
											account.getUsername(), password, nickname, email, version, account.getUsername());
			
			db.execSQL(strSql);
		}
	}
	private void insertAccountInfo(AccountInfo account, boolean savePassword)
	{
		if(db != null)
		{		
			String password = savePassword ? account.getPassword() : "";
			String nickname = (account.getNickname()!=null) ? account.getNickname() : "";
			String email = (account.getEmail()!=null) ? account.getEmail() : "";
			int version = (account.getDevList() != null) ? account.getDevList().getVersion() : 0;
	 		
			String strSql =  String.format("insert into " + Account_tbl +
											"(username,password,nickname,email,devlist_version) " +
											" values('%s','%s','%s','%s',%d);",
											account.getUsername(), password, nickname, email, version);
			
			db.execSQL(strSql);
		}
	}
	
	// �����˻���Ϣ, savePassword -- �Ƿ�Ҫ��������
	public void saveAccount(AccountInfo account, boolean savePassword)
	{
		
		if(account == null || db == null)
			return;
		Cursor mCursor = db.query(true, Account_tbl, new String[] {"username"},
			    			"username = " + "'" + account.getUsername() + "'",
			    			null, null,null, null, null);
		if(mCursor == null || !mCursor.moveToFirst()) // ����
		{
			insertAccountInfo(account, savePassword);
		}
		else //  ����
		{
			updateAccoutInfo(account, savePassword);
		}
	}
	/**
	 *  ����ָ���û������˻�, ֻ�����˻���Ϣ���������豸�б�
	 * @param username �˻���
	 * @return
	 */
	public AccountInfo loadAccountInfo(String username)
	{
		
		if(db != null)
		{
			Cursor mCursor = db.query(true, Account_tbl, new String[] {"username", "password", "nickname", "email", "devlist_version"},
	    			"username = " + "'" + username + "'",
	    			null, null,null, null, null);
			if(mCursor != null && mCursor.moveToFirst())
			{
				AccountInfo account = new AccountInfo(mCursor.getString(0),mCursor.getString(1));
				account.setNickname(mCursor.getString(2));
				account.setEmail(mCursor.getString(3));
				DeviceList devlist = new DeviceList();
				devlist.setVersion(mCursor.getInt(4));
				account.setDevList(devlist);
				return account;
			}
		}
		return null;
	}
	
	/**
	 *  �������б��������ݿ��е��˻�, ֻ�����˻����ƣ�������ǳƣ��������豸�б�
	 * @return �˻���Ϣ�б�
	 */
	public List<AccountInfo> loadAccountList()
	{
		
		
		List<AccountInfo> accountList = new ArrayList<AccountInfo>();
		if(db != null)
		{
			Cursor mCursor = db.query(true, Account_tbl, new String[] {"username", "password", "nickname"},
		
    			"",
    			null, null,null, null, null);
	
			if(mCursor != null && mCursor.moveToFirst())
			{	
				do
				{
					AccountInfo account = new AccountInfo(mCursor.getString(0),mCursor.getString(1));
					account.setNickname(mCursor.getString(2));
					accountList.add(account);
				}
				while(mCursor.moveToNext());	
			}
		}
		return accountList;
	}
	
	/**
	 *  ɾ��һ���˻����������˻��µ������豸��Ϣ
	 * @param username �˻���
	 */
	public void removeAccount(String username)
	{
		if(db == null)
			return;
		db.execSQL("delete from " + Account_tbl + " where username = '" + username + "';");
		db.execSQL("delete from " + Device_tbl + " where username = '" + username + "';");
	}
	/**
	 *  ����һ���豸�б�
	 * @param list ��Ҫ������б�
	 * @param username  �豸�����û���usernameΪnull���߿��ַ���ʱ�����ڹ����б���
	 */
	public void saveDeviceList(DeviceList list, String username)
	{
		if(db == null)
			return;
		// ��ɾ�����˻��µ������豸�����������
		boolean isPubAccount = false;
		String table;
		String row;
		
		if(username == null || username.length() == 0)
		{
			table = Public_tbl;
			row = "(devid,name, hwversion,swversion)";
		
			db.execSQL("delete from " + Public_tbl + " where 1;");
			isPubAccount = true;
			// ���¹����б�汾
			db.execSQL("update " + Global_tbl + " set intValue=" + list.getVersion() + " where name = 'pub_version';");
		}
		else
		{
			table = Device_tbl;
			row = "(devid,name,hwversion,swversion,username)";
			db.execSQL("delete from " + Device_tbl + " where username = '" + username + "';");
			db.execSQL("update " + Account_tbl + " set devlist_version = " + 
						list.getVersion() + " where username = '" + username +"';"); //�����˻����б�汾
		}
		
		synchronized(list)
		{
			for(Device dev:list)		
			{		
				String name = "";
				String hwversion = "";
				String swversion = "";
				String strSql = "insert into " + table + row + " values";
				if(dev.getSee51Info() != null)
				{
					name = dev.getSee51Info().getDeviceName();
					hwversion = dev.getSee51Info().getHwVersion();
					swversion = dev.getSee51Info().getSwVersion();		
				}
	
				
				if(isPubAccount)
				{
					strSql += String.format("('%s','%s','%s','%s')", dev.getID(),name, hwversion, swversion);
				}
				else
				{
					strSql += String.format("('%s','%s','%s','%s','%s')", dev.getID(),name, hwversion, swversion, username);
				}
				db.execSQL(strSql);
		
			}
		}
	}	
	
	/**
	 *  ��ȡ�б�汾
	 * @param username �˻����ƣ�����˻�����Ϊnull���߿��ַ������򷵻ع����б�汾
	 * @return
	 */
	private int getDeviceListVersion(String username)
	{
		if(db != null)
		{		
			String querySql = "name='pub_version'";
			String tableName = Global_tbl;
			String queryCol[] = new String[]{"intValue"};
			if(username != null && !(username.length() == 0))
			{
				querySql = "username = '" + username + "'";
				tableName = Account_tbl;
				queryCol = new String[]{"devlist_version"};
			}
			Cursor verCursor = db.query(true, tableName, queryCol,
					querySql,
					null, null,null, null, null);
			if(verCursor.moveToFirst())
			{
				return verCursor.getInt(0);
			}
		}
		return 0;
	}
	/**
	 *  ����ָ���˻��µ��豸�б�
	 * @param username �˻�����  usernameΪnull���߿��ַ���ʱ���ع����б�
	 * @return
	 */
	public DeviceList loadDeviceList(String username)
	{
		DeviceList devlist = new DeviceList();
		if(db != null)
		{				
			String querySql = "";
			String tableName = Public_tbl;
			if(username != null && !(username.length() == 0))
			{
				querySql = "username = '" + username + "'";
				tableName = Device_tbl;			
			}
			Cursor mCursor = db.query(true, tableName, new String[] {"devid", "name", "hwversion", "swversion"},
					querySql,
					null, null,null, null, null);	
			if(mCursor!= null && mCursor.moveToFirst())
			{
				do
				{
					Device dev = new Device();
					DeviceSee51Info info = new DeviceSee51Info(mCursor.getString(0));
					info.setDeviceName(mCursor.getString(1));
					info.setHwVersion(mCursor.getString(2));
					info.setSwVersion(mCursor.getString(3));
					dev.setSee51Info(info);
					devlist.add(mCursor.getString(0), dev);				
				}while(mCursor.moveToNext());
			}
			devlist.setVersion(this.getDeviceListVersion(username));
		}
		return devlist;
	}
	/**
	 *  ɾ��username�˻��µ��豸�б�
	 * @param username �˻��� usernameΪnull���߿��ַ���ʱɾ�������б�
	 */
	public void removeDeviceList(String username)
	{
		if(db != null)
		{				
			if(username != null && !(username.length() == 0))
			{
				db.execSQL("delete from " + Device_tbl + " where username = '" + username + "';");
				db.execSQL("update " + Account_tbl +" set devlist_version = 0 where username = '" + username + "';");
			}
			else
			{
				db.execSQL("delete from " + Public_tbl + " where 1;");
				db.execSQL("update " + Global_tbl + " set intValue = 0 where name = 'pub_version';");
			}
		}
	}
	/**
	 * ��ȡ���ݿ��״̬
	 * @return true �򿪣� false δ��
	 */
	public boolean isOpend() {
		return opend;
	}

	private static class See51DBHelper extends SQLiteOpenHelper
	{
		public See51DBHelper(Context context, String name,
				CursorFactory factory, int version) {
			super(context, name, factory, version);
			
		}

		@Override
		public void onCreate(SQLiteDatabase db) {
			db.execSQL(CREATE_ACCOUNT_TBL);
			db.execSQL(CREATE_GLOBAL_TBL);
			db.execSQL(CREATE_DEVICE_TBL);
			db.execSQL(CREATE_PUBLIC_TBL);
			db.execSQL("insert into " + Global_tbl + "(name, intValue) values('pub_version', 0);");
		}

		@Override
		public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
				
		}
		
	}
}
