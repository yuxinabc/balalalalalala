//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : See51
//  @ File Name : UnZip.java
//  @ Date : 2013-10-25
//  @ Author : Eric Huang <huangtb@my51c.com>
//
//

package com.my51c.see51.data;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.GZIPInputStream;

/**
 * ��ѹZip�ļ���
 */
public class UnZip
{
	private static final int buffer = 2048;

	private static final String TAG = "UnZip";

	/**
	 * ��ѹGZip����. ��zipFile�ļ���ѹ��folderPathĿ¼��.
	 * @param inFileName ѹ����GZip�ļ�
	 * 
	 */
	
	public static void doUncompressFile(String inFileName)
	{

		try
		{
			if (!getExtension(inFileName).equalsIgnoreCase("gz"))
			{
				//Log.e(TAG,"File name must have extension of \".gz\"");
			}
			//Log.d(TAG,"Opening the compressed file.");
			GZIPInputStream in = null;
			try
			{
				in = new GZIPInputStream(new FileInputStream(inFileName));
			} catch (FileNotFoundException e)
			{
				//Log.e(TAG,"File not found. " + inFileName);
				e.printStackTrace();
			}

			//Log.d(TAG,"Open the output file.");
			String outFileName = getFileName(inFileName);
			FileOutputStream out = null;
			try
			{
				out = new FileOutputStream(outFileName);
			} catch (FileNotFoundException e)
			{
				//Log.d(TAG,"Could not write to file. " + outFileName);
				e.printStackTrace();
			}

			//Log.d(TAG,"Transfering bytes from compressed file to the output file.");
			byte[] buf = new byte[1024];
			int len;
			while ((len = in.read(buf)) > 0)
			{
				out.write(buf, 0, len);
			}

			//Log.d(TAG,"Closing the file and stream");
			in.close();
			out.close();

		} catch (IOException e)
		{
			e.printStackTrace();
		}

	}

	/**
	 * Used to extract and return the extension of a given file.
	 * 
	 * @param f
	 *            Incoming file to get the extension of
	 * @return <code>String</code> representing the extension of the incoming
	 *         file.
	 */
	public static String getExtension(String f)
	{
		String ext = "";
		int i = f.lastIndexOf('.');

		if (i > 0 && i < f.length() - 1)
		{
			ext = f.substring(i + 1);
		}
		return ext;
	}

	/**
	 * Used to extract the filename without its extension.
	 * 
	 * @param f
	 *            Incoming file to get the filename
	 * @return <code>String</code> representing the filename without its
	 *         extension.
	 */
	public static String getFileName(String f)
	{
		String fname = "";
		int i = f.lastIndexOf('.');
		if (i > 0 && i < f.length() - 1)
		{
			fname = f.substring(0, i);
		}
		return fname;
	}

}
