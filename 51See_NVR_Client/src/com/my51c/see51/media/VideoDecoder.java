//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : See51
//  @ File Name : VideoDecoder.java
//  @ Date : 2012-5-30
//  @ Author : Eric Guo <gjl@my51c.com>
//
//



package com.my51c.see51.media;

/**
 * 解码器抽象类，播放器通过该抽象类解码
 * 
 *
 */

public abstract class VideoDecoder {
	
//	/**
//	 * 解码器初始化
//	 * @return
//	 */
//	public abstract int init();
//	/**
//	 * 解码器反初始化
//	 * @return
//	 */
//	public abstract int release();
//	/**
//	 * 解码
//	 * @param in 视频输入数据
//	 * @param out 解码完后的rgb数据
//	 * @param resolution 解码完成后的分辨率
//	 */
//
//	public abstract void decoder(byte[] in, byte[] out, int[]resolution);
	
	/**
	 * 初始化ffmpeg，调用 av_register_all()
	 *
	 */	
	public abstract void initGlobal();
	
	/**
	 * 初始化解码器
	 *@param codecId 目前只接收 "H264"或者"MJPEG"
	 *@return 0:成功 ；-1:失败
	 */	
	public abstract int initDecoder(String codecId);
	
	/**
	 * 初始化mp4编码
	 * @param filename 存储的文件名
	 * @return 0:成功 ；-1:失败
	 */	
	public abstract int initRecord(String filename,int fps);
	
	/**
	 * 解码
	 * @param in 视频输入数据
	 * @param len 视频输入buffer的长度
	 * @param out 解码完后的rgb数据
	 * @param resolution 解码完成后的分辨率
	 * @return imagesize 解码后图像的 长X宽
	 */
	public abstract int decoderNal(int nIndex, byte[] in, byte[] out, int[]resolution);
	
	/**
	 * 写音频数据到mp4文件中
	 * @param in 音频输入数据
	 * @param len 音频输入buffer的长度
	 * @return 0:成功 ；-1:失败
	 */
	public abstract int writeAudio(int nIndex, byte[] in);	
	
	/**
	 * 写视频数据到mp4文件中
	 * @param in 视频输入数据
	 * @param len 视频输入buffer的长度
	 * @return 0:成功 ；-1:失败
	 */
	public abstract int writeVideo(int nIndex, byte[] in);
	
	/**
	 * 释放ffmpeg初始化资源 
	 *
	 */	
	public abstract void uninitGlobal();
	
	/**
	 * 释放解码器资源
	 *
	 */	
	public abstract void uninitDecoder(int nIndex);
	
	/**
	 * 释放mp4编码器资源
	 */	
	public abstract void uninitRecord(int nIndex);	
	
	/**
	 * 初始化AAC解码
	 * @return -1 初始化错误；0初始化 正确
	 */
	public abstract int initAACDecoder();
	
	/**
	 * 解码一个AAC 包
	 * @param in 待解码数据
	 * @param inLen 待解码数据长度
	 * @param out 解码后的数据
	 * @param outLen out的总长度
	 * @return  out中有效音频数据的长度。
	 */
	public abstract int decodeAAC(int nIndex, byte[] in, int inLen, byte[] out, int outLen);
	
	/**
	 * 释放aac解码器资源
	 */
	public abstract void uninitAACDecoder(int nIndex);
	
	/**
	 * 初始化AAC编码器
	 * @return -1 初始化错误； 0 初始化正确。
	 */
	public abstract int initAACEncoder();
	
	/**
	 * 编码一段音频数据
	 * @param in 待编码的PCM数据
	 * @param inLen 代编码数据的长度
	 * @param out  存储编码后的数据
	 * @param outLen out的长度
	 * @return out中有效数据的长度。
	 */
	public abstract int encodeAAC(int nIndex, byte[] in, int inLen, byte[] out, int outLen);
	
	/**
	 * 释放AAC编码器资源
	 */
	public abstract void uninitAACEncoder(int nIndex);
	
}

